// Code generated by MockGen. DO NOT EDIT.
// Source: auth_handlers.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenIssuer is a mock of TokenIssuer interface.
type MockTokenIssuer struct {
	ctrl     *gomock.Controller
	recorder *MockTokenIssuerMockRecorder
}

// MockTokenIssuerMockRecorder is the mock recorder for MockTokenIssuer.
type MockTokenIssuerMockRecorder struct {
	mock *MockTokenIssuer
}

// NewMockTokenIssuer creates a new mock instance.
func NewMockTokenIssuer(ctrl *gomock.Controller) *MockTokenIssuer {
	mock := &MockTokenIssuer{ctrl: ctrl}
	mock.recorder = &MockTokenIssuerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenIssuer) EXPECT() *MockTokenIssuerMockRecorder {
	return m.recorder
}

// IssueToken mocks base method.
func (m *MockTokenIssuer) IssueToken(userID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IssueToken", userID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IssueToken indicates an expected call of IssueToken.
func (mr *MockTokenIssuerMockRecorder) IssueToken(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IssueToken", reflect.TypeOf((*MockTokenIssuer)(nil).IssueToken), userID)
}
